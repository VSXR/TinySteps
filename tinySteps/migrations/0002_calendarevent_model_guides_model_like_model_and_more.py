# Generated by Django 5.1.1 on 2025-03-15 11:37

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
        ("tinySteps", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="CalendarEvent_Model",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("doctor", "Cita Médica"),
                            ("vaccine", "Vacuna"),
                            ("milestone", "Hito de Desarrollo"),
                            ("feeding", "Alimentación"),
                            ("other", "Otro"),
                        ],
                        max_length=20,
                    ),
                ),
                ("date", models.DateField()),
                ("time", models.TimeField(blank=True, null=True)),
                ("description", models.TextField(blank=True, null=True)),
                ("has_reminder", models.BooleanField(default=False)),
                ("reminder_minutes", models.IntegerField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["date", "time"],
            },
        ),
        migrations.CreateModel(
            name="Guides_Model",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=100)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("author", models.CharField(max_length=100)),
                ("desc", models.TextField(max_length=2000)),
                (
                    "image_url",
                    models.CharField(
                        default="images/others/default.jpg", max_length=200
                    ),
                ),
                (
                    "guide_type",
                    models.CharField(
                        choices=[
                            ("parent", "Parent Guide"),
                            ("nutrition", "Nutrition Guide"),
                        ],
                        default="parent",
                        max_length=20,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Like_Model",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("object_id", models.PositiveIntegerField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "Like",
                "verbose_name_plural": "Likes",
            },
        ),
        migrations.CreateModel(
            name="PasswordReset_Model",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "token",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("is_used", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="Vaccine_Model",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("date", models.DateField()),
                ("notes", models.TextField(blank=True, null=True)),
                ("administered", models.BooleanField(default=False)),
                ("next_dose_date", models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="VaccineCard_Model",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
        ),
        migrations.DeleteModel(
            name="NutritionGuides_Model",
        ),
        migrations.DeleteModel(
            name="ParentsGuides_Model",
        ),
        migrations.AlterModelOptions(
            name="contact_model",
            options={
                "verbose_name": "Contact Request",
                "verbose_name_plural": "Contact Requests",
            },
        ),
        migrations.AddField(
            model_name="contact_model",
            name="created_at",
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AddField(
            model_name="parentsforum_model",
            name="likes",
            field=models.ManyToManyField(
                blank=True, related_name="liked_posts", to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name="yourchild_model",
            name="image",
            field=models.ImageField(blank=True, null=True, upload_to="child_photos/"),
        ),
        migrations.AlterField(
            model_name="parentsforum_model",
            name="created_at",
            field=models.DateTimeField(auto_now_add=True, db_index=True),
        ),
        migrations.AlterField(
            model_name="parentsforum_model",
            name="title",
            field=models.CharField(db_index=True, max_length=100),
        ),
        migrations.AlterField(
            model_name="yourchild_model",
            name="image_url",
            field=models.URLField(blank=True, null=True),
        ),
        migrations.AddIndex(
            model_name="parentsforum_model",
            index=models.Index(
                fields=["created_at", "title"], name="tinySteps_p_created_250ae4_idx"
            ),
        ),
        migrations.AddField(
            model_name="calendarevent_model",
            name="child",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="calendar_events",
                to="tinySteps.yourchild_model",
            ),
        ),
        migrations.AddField(
            model_name="like_model",
            name="content_type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="contenttypes.contenttype",
            ),
        ),
        migrations.AddField(
            model_name="like_model",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name="passwordreset_model",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="password_reset_tokens",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="vaccinecard_model",
            name="child",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="vaccine_card",
                to="tinySteps.yourchild_model",
            ),
        ),
        migrations.AddField(
            model_name="vaccine_model",
            name="vaccine_card",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="vaccines",
                to="tinySteps.vaccinecard_model",
            ),
        ),
        migrations.CreateModel(
            name="NutritionGuides_Model",
            fields=[],
            options={
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("tinySteps.guides_model",),
        ),
        migrations.CreateModel(
            name="ParentsGuides_Model",
            fields=[],
            options={
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("tinySteps.guides_model",),
        ),
        migrations.AlterUniqueTogether(
            name="like_model",
            unique_together={("content_type", "object_id", "user")},
        ),
    ]
